<?xml version="1.0" encoding="UTF-8" ?>
<!-- This file was written by IceGrid GUI -->
<icegrid>
   <application name="IceGauntletL2">
      <distrib icepatch="${application}.IcePatch2/server"/>
      <server-template id="IceGauntletAuthTemplate">
         <parameter name="index"/>
         <server id="AuthServer${index}" activation="on-demand" exe="./auth_server.py" pwd="${application.distrib}">
            <properties>
               <property name="Ice.StdOut" value="${application.distrib}/server${index}-out.txt"/>
               <property name="Ice.StdErr" value="${application.distrib}/server${index}-err.txt"/>
               <property name="Ice.ProgramName" value="${server}.Aunthent${index}"/>
            </properties>
            <distrib icepatch="${application}.IcePatch2/server"/>
            <adapter name="AuthenticationAdapter" endpoints="tcp -p 9999" id="${server}.AuthenticationAdapter" replica-group="ReplicatedAuthAdapter">
               <object identity="default${index}" type="::IceGauntlet:Authentication" property="Identity"/>
            </adapter>
         </server>
      </server-template>
      <server-template id="IcePatch2">
         <parameter name="instance-name" default="${application}.IcePatch2"/>
         <parameter name="endpoints" default="default"/>
         <parameter name="directory"/>
         <server id="${instance-name}" activation="on-demand" application-distrib="false" exe="icepatch2server">
            <properties>
               <property name="IcePatch2.InstanceName" value="${instance-name}"/>
               <property name="IcePatch2.Directory" value="${directory}"/>
               <property name="IcePatch2.Endpoints" value="${endpoints}"/>
            </properties>
            <adapter name="IcePatch2" endpoints="${endpoints}" id="${server}.IcePatch2">
               <object identity="${instance-name}/server" type="::IcePatch2::FileServer"/>
            </adapter>
         </server>
      </server-template>
      <server-template id="RoomManagerTemplate">
         <parameter name="index"/>
         <server id="MapManagerServer${index}" activation="on-demand" exe="./ServerMapManager.py" pwd="${application.distrib}">
            <properties>
               <property name="Identity" value="map"/>
               <property name="Ice.StdOut" value="${application.distrib}/server${index}-out.txt"/>
               <property name="Ice.StdErr" value="${application.distrib}/server${index}-err.txt"/>
               <property name="Ice.ProgramName" value="${server}.MapManager${index}"/>
               <property name="IceStorm.TopicManager.Proxy" value="IceStorm/TopicManager:tcp -p 10000"/>
            </properties>
            <distrib icepatch="${application}.IcePatch2/server"/>
            <adapter name="DungeonAdapter" endpoints="tcp" id="${server}.DungeonAdapter">
               <object identity="dungeon${index}" type="::IceGauntlet:Dungeon" property="IdentityDungeonAdapter"/>
            </adapter>
            <adapter name="DungeonAreaAdapter" endpoints="tcp" id="${server}.DungeonAreaAdapter">
               <object identity="dungeonArea${index}" type="::IceGauntlet:DungeonArea" property="IdentityDungeonArea"/>
            </adapter>
            <adapter name="DungeonAreaSyncAdapter" endpoints="tcp" id="${server}.DungeonAreaSyncAdapter">
               <object identity="DungeonAreaSync${index}" type="::IceGauntlet:DungeonArea" property="IdentityDungeonAreaSyncAdapter"/>
            </adapter>
            <adapter name="MapAdapter" endpoints="tcp" id="${server}.MapAdapter" replica-group="ReplicatedMapAdapter">
               <object identity="map${index}" type="::IceGauntlet:RoomManager" property="IdentityMapAdapter"/>
            </adapter>
            <adapter name="RoomSyncAdapter" endpoints="tcp" id="${server}.RoomSyncAdapter">
               <object identity="roomsync${index}" type="::IceGauntlet:RoomManagerSync" property="IdentityRoomSyncAdapter"/>
            </adapter>
         </server>
      </server-template>
      <replica-group id="ReplicatedAuthAdapter">
         <load-balancing type="random" n-replicas="0"/>
         <object identity="default" type="::IceGauntlet:Authentication"/>
      </replica-group>
      <replica-group id="ReplicatedMapAdapter">
         <load-balancing type="random" n-replicas="0"/>
         <object identity="map" type="::IceGauntlet:RoomManager"/>
      </replica-group>
      <node name="node1">
         <server-instance template="IceGauntletAuthTemplate" index="1"/>
         <icebox id="IceBoxServer" activation="on-demand" exe="icebox" pwd="${application.distrib}">
            <properties>
               <property name="Ice.StdOut" value="${application.distrib}/icebox-out.txt"/>
               <property name="Ice.StdErr" value="${application.distrib}/icebox-err.txt"/>
            </properties>
            <distrib icepatch="${application}.IcePatch2/server"/>
            <service name="IceStorm" entry="IceStormService,37:createIceStorm">
               <properties>
                  <property name="TopicManager.PublishedEndpoints" value="tcp -p 2000"/>
                  <property name="IceStorm.TopicManager.Endpoints" value="tcp -p 10000"/>
                  <property name="IceStorm.Publish.Endpoints" value="tcp -p 2000"/>
                  <property name="IceStorm.Flush.Timeout" value="2000"/>
                  <property name="Freeze.DbEnv.IceStorm.DbHome" value="db"/>
               </properties>
               <adapter name="TopicManager" endpoints="tcp -p 10000" id="${server}.${service}.TopicManager"/>
            </service>
         </icebox>
         <server-instance template="IcePatch2" directory="/tmp/IcePatchIceGauntlet"/>
         <server-instance template="RoomManagerTemplate" index="1"/>
      </node>
      <node name="node2">
         <server-instance template="RoomManagerTemplate" index="2"/>
         <server-instance template="RoomManagerTemplate" index="3"/>
      </node>
   </application>
</icegrid>
